MY SOLUTION: (JUST A LITTLE LESS OPTIMISED)

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int row = 0 , col = 0;
        for (int i = 0 ; i < matrix.size() ; i++){
            for(int j = 0 ; j < matrix[0].size() ; j++){
                if(matrix[i][j] == 0){
                    if(i == 0 or j == 0){
                        if(i == 0) row=1;
                        if(j == 0) col=1;
                    } else {
                        matrix[i][0] = matrix[0][j] = 0;
                    }
                }
            }
        }
        for (int i = 1 ; i < matrix.size() ; i++){
            if(matrix[i][0] == 0) {
                for(int j = 0 ; j < matrix[0].size() ; j++){
                    matrix[i][j] = 0;
                }
            }
        }
        for (int i = 1 ; i < matrix[0].size() ; i++){
            if(matrix[0][i] == 0) {
                for(int j = 0 ; j < matrix.size() ; j++){
                    matrix[j][i] = 0;
                }
            } 
        }
        if(row == 1){
            for(int i = 0 ; i < matrix[0].size();i++) matrix[0][i] = 0;
        }
        if(col == 1){
            for(int i = 0 ; i < matrix.size();i++) matrix[i][0] = 0;
        }
    }
};



GPT SOLUTION (OPTIMISED BY USING BREAK STATEMENT)

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        bool firstRowZero = false;
        bool firstColZero = false;
        int m = matrix.size(), n = matrix[0].size();
        
        // Check if first row needs to be zeroed
        for (int j = 0; j < n; j++) {
            if (matrix[0][j] == 0) {
                firstRowZero = true;
                break;
            }
        }
        
        // Check if first column needs to be zeroed
        for (int i = 0; i < m; i++) {
            if (matrix[i][0] == 0) {
                firstColZero = true;
                break;
            }
        }
        
        // Use first row/column as markers for the rest
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                if (matrix[i][j] == 0) {
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }
        
        // Zero out marked rows and columns
        for (int i = 1; i < m; i++) {
            if (matrix[i][0] == 0) {
                for (int j = 1; j < n; j++) {
                    matrix[i][j] = 0;
                }
            }
        }
        
        for (int j = 1; j < n; j++) {
            if (matrix[0][j] == 0) {
                for (int i = 1; i < m; i++) {
                    matrix[i][j] = 0;
                }
            }
        }
        
        // Zero out first row and column if needed
        if (firstRowZero) {
            for (int j = 0; j < n; j++) {
                matrix[0][j] = 0;
            }
        }
        
        if (firstColZero) {
            for (int i = 0; i < m; i++) {
                matrix[i][0] = 0;
            }
        }
    }
};
